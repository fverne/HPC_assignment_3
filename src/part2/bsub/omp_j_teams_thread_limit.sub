#!/bin/bash
# 02614 - High-Performance Computing, January 2024
# 
# batch script to run matmult on a dedicated GPU server in the hpcintrogpu
# queue
#
# Author: Bernd Dammann <bd@cc.dtu.dk>
#         Hans Henrik Brandenborg SÃ¸rensen <hhbs@dtu.dk>
#
#BSUB -J omp_teams_thread_limit
#BSUB -o output/omp_teams_thread_limit_%J.out
#BSUB -e output/omp_teams_thread_limit_%J.err
#BSUB -q hpcintrogpu
#BSUB -n 32
#BSUB -R "rusage[mem=2048]"
#BSUB -W 1:00
#BSUB -R "span[hosts=1]"
#BSUB -gpu "num=1:mode=exclusive_process"

EXECUTABLE="poisson_j"

# Tolerance is not actually used at these scripts, just there for the
# sake of the argument
# N_SIZES="50 100 200 400 800 1000"
# THREADS="1 2 4 8 10 12 16 20 24 30 36 40"
TOLERANCE="0.001"
ITER_MAX=100000
START_VALUE="0.0"
EXTRA_ARGS=4

N_DEFAULT=100
# Experiment with these values for jacobi gpu
# given this information
# Multiprocessors = 114
# Maximum number of threads per block = 1024 
# NUM_TEAMS_LIST="64 114 128 256 512 1024"
NUM_TEAMS_LIST="64 108 256 512 700 1024 2048 4096 8192 16384 32768"
THREAD_LIMIT_LIST="64 128 256 512 1024 1500 2048"

# load module for shared cuda libraries
module load /appl9/nvhpc/2023_2311/modulefiles/nvhpc-nompi/23.11

MAKE_THREADS=12

cd ..
for TEAM in $NUM_TEAMS_LIST; do
    for THREAD in $THREAD_LIMIT_LIST; do
        make clean
        export NUM_TEAMS=$TEAM
        export THREAD_LIMIT=$THREAD
        echo -e "bsub: THREAD_LIMIT will be set to: $THREAD_LIMIT"
        echo -e "bsub: NUM_TEAMS will be set to: $NUM_TEAMS"
        make  > /dev/null 2>&1
        # -j $MAKE_THREADS
        ./$EXECUTABLE $N_DEFAULT $ITER_MAX $TOLERANCE $START_VALUE $EXTRA_ARGS 
    done    
done